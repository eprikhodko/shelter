{"version":3,"file":"index.d76f1b0d09fdea0c6eb9.js","mappings":";;;;;;;AAA8B;AAC9B;AAC8D;;AAE9D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,YAAY,oBAAQ;;AAEpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,OAAO;AACzB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kBAAkB,OAAO;AACzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,oBAAQ;AACpB;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,oBAAQ;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;;AAEA;AACA,gBAAgB,OAAO;AACvB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC","sources":["webpack://shelter/./src/pages/main/main.js"],"sourcesContent":["import '../../scss/main.scss';\n// import './js/pets.json'\nimport petsData from './js/pets.json' assert { type: 'json' };\n\nconsole.log('hello, this is main page');\n\n// code for burger menu\n// const closeButton = document.querySelector('.header-nav__button-close-nav');\nconst overlayDark = document.querySelector('#overlay-dark');\nconst openButton = document.querySelector('.header-nav__button-open-nav');\nconst nav = document.querySelector('.header-nav__nav-list-wrapper');\nconst navItems = document.querySelectorAll('.header-nav__nav-list-item');\nconst body = document.querySelector('body');\n\n// closeButton.addEventListener('click', () => {\n//   nav.classList.remove('navigation-open');\n//   body.classList.remove('disable-scroll');\n// });\n\nopenButton.addEventListener('click', () => {\n  nav.classList.toggle('navigation-open');\n  body.classList.toggle('disable-scroll');\n  openButton.classList.toggle('header-nav__button-open-nav_rotate');\n  overlayDark.classList.toggle('bg-semi-transparent');\n});\n\noverlayDark.addEventListener('click', () => {\n  nav.classList.remove('navigation-open');\n  body.classList.remove('disable-scroll');\n  openButton.classList.remove('header-nav__button-open-nav_rotate');\n  overlayDark.classList.remove('bg-semi-transparent');\n});\n\n// close mobile nav when user click any item from mobile menu\nnavItems.forEach((item) => {\n  item.addEventListener('click', () => {\n    nav.classList.remove('navigation-open');\n    body.classList.remove('disable-scroll');\n    openButton.classList.remove('header-nav__button-open-nav_rotate');\n    overlayDark.classList.remove('bg-semi-transparent');\n  });\n});\n\n// code for carousel\n// const url = '../../pages/main/js/pets.json';\n// async function getData(url) {\n//   const response = await fetch(url);\n\n//   return response.json();\n// }\n\n// const petsData = await getData(url);\n\nconsole.log(petsData);\n\nconst BTN_LEFT = document.querySelector('#btn-left');\nconst BTN_RIGHT = document.querySelector('#btn-right');\nconst CAROUSEL = document.querySelector('#carousel');\nconst ITEM_LEFT = document.querySelector('#item-left');\nconst ITEM_RIGHT = document.querySelector('#item-right');\nconst ITEM_ACTIVE = document.querySelector('#item-active');\n\n// set initial pets indexes for carousel\nlet petsNums = [4, 0, 2];\n\nconst generateNewNumbersBasedOnOldNumbers = (oldNums) => {\n  function shuffle(array) {\n    let currentIndex = array.length,\n      randomIndex;\n\n    // While there remain elements to shuffle.\n    while (currentIndex != 0) {\n      // Pick a remaining element.\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      // And swap it with the current element.\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex],\n        array[currentIndex],\n      ];\n    }\n\n    return array;\n  }\n\n  let arr = [0, 1, 2, 3, 4, 5, 6, 7];\n\n  let shuffledArray = shuffle(arr);\n\n  // смержим старый массив из трех чисел, и новый шаффл массив. Потом сделаем из этого массива сет. Если длина сета такая же как длина смерженного массива, тогда дубликатов нет, и мы возвращаем shuffledArray. Если же дубликаты есть, то нам нужно запустить эту функцию снова. Base case - когда у нас сет равен длине массива.\n  const mergedArray = shuffledArray.slice(0, 3).concat(oldNums.slice(0, 3));\n\n  if (mergedArray.length === [...new Set(mergedArray)].length) {\n    petsNums = shuffledArray.slice(0, 3);\n    return shuffledArray.slice(0, 3);\n  } else {\n    return generateNewNumbersBasedOnOldNumbers(oldNums);\n  }\n};\n\nconst moveLeft = () => {\n  CAROUSEL.classList.add('transition-left');\n  BTN_LEFT.removeEventListener('click', moveLeft);\n  BTN_RIGHT.removeEventListener('click', moveRight);\n\n  ITEM_LEFT.innerHTML = '';\n  generateNewNumbersBasedOnOldNumbers(petsNums);\n\n  // сгенерируем три карточки для левого айтема\n  for (let i = 0; i < 3; i += 1) {\n    setLeftItem(petsNums[i]);\n  }\n\n  console.log('current numbers state', petsNums);\n};\n\nconst moveRight = () => {\n  CAROUSEL.classList.add('transition-right');\n  BTN_RIGHT.removeEventListener('click', moveRight);\n  BTN_LEFT.removeEventListener('click', moveLeft);\n\n  ITEM_RIGHT.innerHTML = '';\n  generateNewNumbersBasedOnOldNumbers(petsNums);\n\n  // сгенерируем три карточки для левого айтема\n  for (let i = 0; i < 3; i += 1) {\n    setRightItem(petsNums[i]);\n  }\n};\n\nBTN_LEFT.addEventListener('click', moveLeft);\nBTN_RIGHT.addEventListener('click', moveRight);\n\nconst createCard = (petKey) => {\n  const createCardTemplate = () => {\n    const card = document.createElement('div');\n    card.classList.add('card');\n    return card;\n  };\n\n  // создадим карточку питомца\n  const card = createCardTemplate();\n\n  // создадим элемент img\n  const img = document.createElement('img');\n  img.classList.add('card__image');\n  // зададим элементу img src\n  img.src = petsData[petKey].img;\n  // добавим элемент img внутрь нашей карточки\n  card.appendChild(img);\n\n  // добавим в карточку имя питомца\n  const petName = document.createElement('p');\n  petName.classList.add('card__pet-name');\n  petName.innerText = petsData[petKey].name;\n  card.appendChild(petName);\n\n  // добавим в карточку кнопку learn more\n  const buttonLearnMore = document.createElement('button');\n  buttonLearnMore.type = 'button';\n  buttonLearnMore.classList.add('button-secondary');\n  buttonLearnMore.classList.add('card__button');\n  buttonLearnMore.innerText = 'Learn more';\n  card.appendChild(buttonLearnMore);\n\n  return card;\n};\n\nconst setCentralItem = (petKey) => {\n  const card = createCard(petKey);\n\n  ITEM_ACTIVE.appendChild(card);\n};\n\nconst setLeftItem = (petKey) => {\n  const card = createCard(petKey);\n\n  ITEM_LEFT.appendChild(card);\n};\n\nconst setRightItem = (petKey) => {\n  const card = createCard(petKey);\n\n  ITEM_RIGHT.appendChild(card);\n};\n\n// сгенерируем три карточки для активного айтема во время начальной загрузки страницы\nfor (let i = 0; i < 3; i += 1) {\n  setCentralItem(petsNums[i]);\n}\n\n// сгенерируем три карточки для левого айтема во время начальной загрузки страницы\nfor (let i = 0; i < 3; i += 1) {\n  setLeftItem(petsNums[i]);\n}\n\n// сгенерируем три карточки для правого айтема во время начальной загрузки страницы\nfor (let i = 0; i < 3; i += 1) {\n  setRightItem(petsNums[i]);\n}\n\nCAROUSEL.addEventListener('animationend', (animationEvent) => {\n  if (animationEvent.animationName === 'move-left') {\n    CAROUSEL.classList.remove('transition-left');\n\n    const leftItems = document.querySelector('#item-left').innerHTML;\n    ITEM_ACTIVE.innerHTML = leftItems;\n  } else {\n    CAROUSEL.classList.remove('transition-right');\n\n    const rightItems = document.querySelector('#item-right').innerHTML;\n    ITEM_ACTIVE.innerHTML = rightItems;\n  }\n\n  BTN_LEFT.addEventListener('click', moveLeft);\n  BTN_RIGHT.addEventListener('click', moveRight);\n});\n"],"names":[],"sourceRoot":""}